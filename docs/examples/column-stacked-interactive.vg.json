{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "Major Trophies for some English teams",
  "width": 714,
  "height": 476,
  "padding": 10,
  "config": {
    "range": {
      "category": [
        "#90ed7d",
        "#434348",
        "#7cb5ec"
      ]
    },
    "events": {
      "defaults": {
        "allow": [
          "keydown"
        ]
      }
    }
  },
  "title": {
    "text": "Major Trophies for some English teams",
    "frame": "group",
    "anchor": "start",
    "fontSize": 16,
    "lineHeight": 1.2
  },
  "data": [
    {
      "name": "table",
      "values": [
        {
          "team": "Arsenal",
          "trophies": 0,
          "contest": "CL"
        },
        {
          "team": "Arsenal",
          "trophies": 14,
          "contest": "FA Cup"
        },
        {
          "team": "Arsenal",
          "trophies": 3,
          "contest": "BPL"
        },
        {
          "team": "Chelsea",
          "trophies": 2,
          "contest": "CL"
        },
        {
          "team": "Chelsea",
          "trophies": 8,
          "contest": "FA Cup"
        },
        {
          "team": "Chelsea",
          "trophies": 5,
          "contest": "BPL"
        },
        {
          "team": "Liverpool",
          "trophies": 6,
          "contest": "CL"
        },
        {
          "team": "Liverpool",
          "trophies": 8,
          "contest": "FA Cup"
        },
        {
          "team": "Liverpool",
          "trophies": 1,
          "contest": "BPL"
        },
        {
          "team": "Manchester United",
          "trophies": 3,
          "contest": "CL"
        },
        {
          "team": "Manchester United",
          "trophies": 12,
          "contest": "FA Cup"
        },
        {
          "team": "Manchester United",
          "trophies": 13,
          "contest": "BPL"
        }
      ],
      "transform": [
        {
          "type": "stack",
          "groupby": [
            "team"
          ],
          "field": "trophies"
        },
        {
          "type": "joinaggregate",
          "groupby": [
            "team"
          ],
          "fields": [
            "trophies",
            "contest"
          ],
          "ops": [
            "sum",
            "count"
          ],
          "as": [
            "trophies_total",
            "contests_total"
          ]
        }
      ]
    }
  ],
  "signals": [
    {
      "name": "navigateBy",
      "value": "team",
      "description": "Select the navigation mode",
      "on": [
        {
          "description": "Switches the navigation mode to contest, to navigate by bar segment within stacked columns.",
          "events": "@column:keydown![event.key === 'Enter' || event.key === ' ']",
          "update": "navigateBy === 'team' ? 'contest' : 'team'"
        },
        {
          "description": "Switches the navigation mode to team, to navigate by stacked column.",
          "events": "@bar:keydown![event.key === 'Escape']",
          "update": "navigateBy === 'contest' ? 'team' : 'contest'"
        }
      ]
    },
    {
      "name": "lastFocused",
      "value": {},
      "description": "Sets the lastFocused team and contest, for managing the tabindex for the tabbable element in the scenegraph.",
      "on": [
        {
          "events": "@column:focusin, @bar:focusin",
          "update": "{team: datum.team, contest: datum.contest}"
        }
      ]
    },
    {
      "name": "focusedItem",
      "value": null,
      "description": "Sets the focused item(), for display and positioning of the focus outline.",
      "on": [
        {
          "events": "@column:focusin, @bar:focusin",
          "update": "item() ? item() : null"
        },
        {
          "events": "@column:focusout, @bar:focusout",
          "update": "null"
        }
      ]
    },
    {
      "name": "tooltipItem",
      "value": null,
      "description": "Sets the focused item(), for display and positioning of the tooltip.",
      "on": [
        {
          "events": "@column:focusin, @bar:focusin",
          "update": "item() ? item() : null"
        },
        {
          "events": "@column:focusout, @bar:focusout, @column:keydown![event.key === 'Escape'], @bar:keydown![event.key === 'Escape']",
          "update": "null"
        }
      ]
    },
    {
      "name": "focusManager",
      "description": "Manages the focus state of the scenegraph in response to keyboard events.",
      "on": [
        {
          "description": "Focuses the next stacked bar in the scenegraph.",
          "events": "@column:keydown![event.key === 'ArrowRight']",
          "update": "focus( indexof(group('column').mark.items, item()) < length(group('column').mark.items) - 1 ? group('column').mark.items[indexof(group('column').mark.items, item()) + 1] : group('column').mark.items[0] )"
        },
        {
          "description": "Focuses the previous stacked bar in the scenegraph.",
          "events": "@column:keydown![event.key === 'ArrowLeft']",
          "update": "focus( indexof(group('column').mark.items, item()) > 0 ? group('column').mark.items[indexof(group('column').mark.items, item()) - 1] : peek(group('column').mark.items) )"
        },
        {
          "description": "Focuses the top bar segment within the current stacked bar.",
          "events": "@column:keydown![event.key === 'Enter' || event.key === ' ']",
          "update": "focus( peek(item().items[0].items) )"
        },
        {
          "description": "Focuses the current stacked bar.",
          "events": "@bar:keydown![event.key === 'Escape']",
          "update": "focus(group('column'))"
        },
        {
          "description": "Focuses the parent stacked bar when a segment receives focus when navigating by team.",
          "events": "@bar:focusin",
          "update": "navigateBy === 'team' && group('column') && focus(group('column'))"
        },
        {
          "description": "Focuses the previous bar segment within the current stacked bar.",
          "events": "@bar:keydown![event.key === 'ArrowUp']",
          "update": "focus( indexof(group('bar').mark.items, item()) < length(group('bar').mark.items) - 1 ? group('bar').mark.items[indexof(group('bar').mark.items, item()) + 1] : group('bar').mark.items[0] )"
        },
        {
          "description": "Focuses the next bar segment within the current stacked bar.",
          "events": "@bar:keydown![event.key === 'ArrowDown']",
          "update": "focus( indexof(group('bar').mark.items, item()) > 0 ? group('bar').mark.items[indexof(group('bar').mark.items, item()) - 1] : peek(group('bar').mark.items) )"
        },
        {
          "description": "Focuses the bar segment for the current contest within the previous stacked bar.",
          "events": "@bar:keydown![event.key === 'ArrowLeft']",
          "update": "focus( indexof(group('column').mark.items, group('column')) > 0 ? group('column').mark.items[indexof(group('column').mark.items, group('column')) - 1].items[0].items[indexof(group('bar').mark.items, item())] : peek(group('column').mark.items).items[0].items[indexof(group('bar').mark.items, item())] )"
        },
        {
          "description": "Focuses the bar segment for the current contest within the next stacked bar.",
          "events": "@bar:keydown![event.key === 'ArrowRight']",
          "update": "focus( indexof(group('column').mark.items, group('column')) < length(group('column').mark.items) - 1 ? group('column').mark.items[indexof(group('column').mark.items, group('column')) + 1].items[0].items[indexof(group('bar').mark.items, item())] : group('column').mark.items[0].items[0].items[indexof(group('bar').mark.items, item())] )"
        }
      ]
    },
    {
      "name": "focusOutlineStyles",
      "description": "Focus outline stroke styles",
      "value": {
        "strokeColor": "#005fcc",
        "bgStrokeColor": "#fff",
        "strokeWidth": 5,
        "strokeOffset": 2,
        "cornerRadius": 6
      }
    },
    {
      "name": "tooltipStyles",
      "description": "Tooltip container styles",
      "value": {
        "strokeColor": "#bbb",
        "strokeWidth": 0.5,
        "fill": "#fff",
        "textFill": "#000",
        "fontFamily": "sans-serif",
        "baseline": "top",
        "fontSize": 11,
        "lineHeight": 1.2,
        "cornerRadius": 6
      }
    }
  ],
  "scales": [
    {
      "name": "xscale",
      "type": "band",
      "range": "width",
      "domain": {
        "data": "table",
        "field": "team"
      },
      "padding": 0.25
    },
    {
      "name": "y",
      "type": "linear",
      "range": "height",
      "nice": true,
      "zero": true,
      "domain": {
        "data": "table",
        "field": "y1"
      },
      "domainMax": 30
    },
    {
      "name": "color",
      "type": "ordinal",
      "range": "category",
      "domain": {
        "data": "table",
        "field": "contest"
      }
    }
  ],
  "axes": [
    {
      "orient": "bottom",
      "scale": "xscale",
      "title": "Teams",
      "tickColor": "#ccc",
      "titleColor": "#676767",
      "labelColor": "#676767",
      "zindex": 1
    },
    {
      "grid": true,
      "gridColor": "#ccc",
      "orient": "left",
      "scale": "y",
      "title": "Count trophies",
      "tickColor": "#ccc",
      "titleColor": "#676767",
      "labelColor": "#676767",
      "tickCount": 6,
      "tickMinStep": 5,
      "zindex": 1
    }
  ],
  "legends": [
    {
      "orient": "top-left",
      "fill": "color",
      "offset": 15,
      "padding": 4,
      "zindex": 1,
      "direction": "horizontal",
      "values": [
        "BPL",
        "FA Cup",
        "CL"
      ],
      "strokeColor": "#ccc",
      "fillColor": "#fff"
    }
  ],
  "marks": [
    {
      "name": "column",
      "type": "group",
      "encode": {
        "enter": {
          "ariaRole": {
            "value": "graphics-object"
          },
          "ariaRoleDescription": {
            "value": "stacked bar"
          },
          "description": {
            "signal": "'team: ' + datum.team + ', total trophies: ' + datum.trophies_total + ', contains ' + datum.contests_total + ' contests'"
          },
          "x": {
            "scale": "xscale",
            "field": "team"
          },
          "width": {
            "scale": "xscale",
            "band": 1
          },
          "height": {
            "signal": "height - scale('y', datum.trophies_total)"
          },
          "y": {
            "scale": "y",
            "field": "trophies_total"
          },
          "outline": {
            "value": "0"
          }
        },
        "update": {
          "tooltip": [
            {"test": "isValid(tooltipItem)", "value": ""},
            {"signal": "{'team': datum.team, 'trophies': datum.trophies_total, 'contests': datum.contests_total}"}
          ],
          "tabindex": [
            {
              "test": "navigateBy === 'team' && (!lastFocused.team || (lastFocused.team === datum.team && !lastFocused.contest))",
              "value": 0
            },
            {
              "test": "navigateBy === 'team' && lastFocused.team",
              "value": -1
            },
            {
              "value": -1
            }
          ],
          "zindex": [
            {
              "test": "lastFocused.team && lastFocused.team === datum.team",
              "value": 2
            },
            {
              "value": 1
            }
          ]
        }
      },
      "from": {
        "facet": {
          "name": "table_team",
          "data": "table",
          "groupby": [
            "team"
          ],
          "aggregate": {
            "fields": [
              "trophies",
              "contest"
            ],
            "ops": [
              "sum",
              "count"
            ],
            "as": [
              "trophies_total",
              "contests_total"
            ]
          }
        }
      },
      "data": [
        {
          "name": "trophies_total",
          "source": "table_team",
          "transform": [
            {
              "type": "aggregate",
              "groupby": [
                "team"
              ],
              "fields": [
                "trophies"
              ],
              "ops": [
                "sum"
              ],
              "as": [
                "trophies_total"
              ]
            }
          ]
        }
      ],
      "zindex": 1,
      "marks": [
        {
          "name": "bar",
          "type": "rect",
          "from": {
            "data": "table_team"
          },
          "zindex": 1,
          "encode": {
            "enter": {
              "x": {
                "value": 0
              },
              "width": {
                "scale": "xscale",
                "band": 1,
                "offset": -1
              },
              "y": {
                "scale": "y",
                "field": "y0",
                "offset": {
                  "signal": "-scale('y', datum.trophies_total)"
                }
              },
              "y2": [
                {
                  "test": "datum.trophies === 0",
                  "scale": "y",
                  "field": "y1",
                  "offset": {
                    "signal": "- scale('y', datum.trophies_total) - 1"
                  }
                },
                {
                  "scale": "y",
                  "field": "y1",
                  "offset": {
                    "signal": "-scale('y', datum.trophies_total)"
                  }
                }
              ],
              "fill": [
                {
                  "test": "datum.trophies === 0",
                  "value": "transparent"
                },
                {
                  "scale": "color",
                  "field": "contest"
                }
              ],
              "stroke": [
                {
                  "test": "datum.trophies === 0",
                  "value": "transparent"
                },
                {
                  "value": "#fff"
                }
              ],
              "strokeWidth": {
                "value": 1
              },
              "ariaRole": {
                "value": "graphics-symbol"
              },
              "ariaRoleDescription": {
                "value": "bar"
              },
              "description": {
                "signal": "'team: ' + datum.team + ', contest: ' + datum.contest + ', trophies: ' + datum.trophies"
              },
              "outline": {
                "value": "0"
              }
            },
            "update": {
              "tooltip": [
                {"test": "isValid(tooltipItem)", "value": ""},
                {"signal": "{'contest': datum.contest, 'team': datum.team, 'trophies': datum.trophies}"}
              ],
              "fillOpacity": {
                "value": 1
              },
              "tabindex": [
                {
                  "test": "navigateBy === 'contest' && (!lastFocused.team || (lastFocused.team === datum.team && lastFocused.contest === datum.contest))",
                  "value": 0
                },
                {
                  "test": "navigateBy === 'contest'",
                  "value": -1
                },
                {
                  "value": -1
                }
              ],
              "zindex": [
                {
                  "test": "lastFocused.contest && lastFocused.contest === datum.contest",
                  "value": 2
                },
                {
                  "value": 1
                }
              ]
            },
            "hover": {
              "fillOpacity": {
                "value": 0.75
              }
            }
          }
        },
        {
          "type": "text",
          "from": {
            "data": "bar"
          },
          "aria": false,
          "interactive": false,
          "zindex": 2,
          "encode": {
            "update": {
              "y": {
                "signal": "datum.y"
              },
              "dy": [
                {
                  "test": "datum.datum.trophies === 0",
                  "signal": "datum.y2 - datum.y"
                },
                {
                  "signal": "(datum.y2 - datum.y)/2 + 1"
                }
              ],
              "x": {
                "scale": "xscale",
                "band": 0.5
              },
              "align": {
                "value": "center"
              },
              "baseline": [
                {
                  "test": "datum.datum.trophies === 0",
                  "value": "bottom"
                },
                {
                  "value": "middle"
                }
              ],
              "fill": {
                "value": "transparent"
              },
              "stroke": {
                "value": "white"
              },
              "strokeWidth": {
                "value": 2
              },
              "strokeJoin": {
                "value": "round"
              },
              "fontWeight": {
                "value": "bold"
              },
              "text": {
                "field": "datum.trophies"
              }
            }
          }
        },
        {
          "type": "text",
          "from": {
            "data": "bar"
          },
          "aria": false,
          "interactive": false,
          "zindex": 2,
          "encode": {
            "update": {
              "y": {
                "signal": "datum.y"
              },
              "dy": [
                {
                  "test": "datum.datum.trophies === 0",
                  "signal": "datum.y2 - datum.y"
                },
                {
                  "signal": "(datum.y2 - datum.y)/2 + 1"
                }
              ],
              "x": {
                "scale": "xscale",
                "band": 0.5
              },
              "align": {
                "value": "center"
              },
              "baseline": [
                {
                  "test": "datum.datum.trophies === 0",
                  "value": "bottom"
                },
                {
                  "value": "middle"
                }
              ],
              "fill": {
                "value": "black"
              },
              "fontWeight": {
                "value": "bold"
              },
              "text": {
                "field": "datum.trophies"
              }
            }
          }
        },
        {
          "type": "text",
          "from": {
            "data": "trophies_total"
          },
          "aria": false,
          "interactive": false,
          "encode": {
            "enter": {
              "x": {
                "scale": "xscale",
                "band": 0.5
              },
              "y": {
                "value": 0,
                "offset": -2
              },
              "text": {
                "field": "trophies_total"
              },
              "align": {
                "value": "center"
              },
              "baseline": {
                "value": "bottom"
              },
              "fontWeight": {
                "value": "bold"
              },
              "fill": {
                "value": "#676767"
              }
            }
          }
        }
      ]
    },
    {
      "type": "rect",
      "name": "focusOutline",
      "aria": false,
      "interactive": false,
      "zindex": 2,
      "encode": {
        "update": {
          "visibility": {
            "signal": "focusedItem ? 'visible' : 'hidden'"
          },
          "x": {
            "signal": "focusedItem ? focusedItem.mark.group.x + focusedItem.x - focusOutlineStyles.strokeOffset : 0"
          },
          "width": {
            "signal": "focusedItem ? focusedItem.width + focusOutlineStyles.strokeWidth - focusOutlineStyles.strokeOffset : 0"
          },
          "y": {
            "signal": "focusedItem ? focusedItem.mark.group.y + focusedItem.y - focusOutlineStyles.strokeOffset : 0"
          },
          "height": {
            "signal": "focusedItem ? focusedItem.height + focusOutlineStyles.strokeWidth - focusOutlineStyles.strokeOffset : 0"
          },
          "stroke": {
            "signal": "focusOutlineStyles.bgStrokeColor"
          },
          "strokeWidth": [
            {
              "test": "isValid(focusedItem)",
              "signal": "focusOutlineStyles.strokeWidth"
            },
            {
              "value": 0
            }
          ],
          "cornerRadius": {
            "signal": "focusOutlineStyles.cornerRadius"
          }
        }
      }
    },
    {
      "type": "rect",
      "from": {
        "data": "focusOutline"
      },
      "aria": false,
      "interactive": false,
      "zindex": 2,
      "encode": {
        "update": {
          "visibility": {
            "signal": "datum.visibility"
          },
          "x": {
            "signal": "datum.x + 1"
          },
          "width": {
            "signal": "datum.width - 2"
          },
          "y": {
            "signal": "datum.y + 1"
          },
          "height": {
            "signal": "datum.height - 2"
          },
          "stroke": {
            "signal": "focusOutlineStyles.strokeColor"
          },
          "strokeWidth": {
            "signal": "max(datum.strokeWidth - 1, 0)"
          },
          "cornerRadius": {
            "signal": "datum.cornerRadius - 1"
          }
        }
      }
    },
    {
      "type": "group",
      "name": "tooltipGroup",
      "aria": false,
      "interactive": false,
      "zindex": 2,
      "encode": {
        "update": {
          "x": [
            {
              "test": "tooltipItem && tooltipItem.mark.group.x + tooltipItem.x + tooltipItem.width * 1.5 + tooltipStyles.fontSize * 2 > width",
              "signal": "tooltipItem.mark.group.x + tooltipItem.x - tooltipItem.width/2 - tooltipStyles.fontSize * 2"
            },
            {
              "signal": "tooltipItem ? tooltipItem.mark.group.x + tooltipItem.x + tooltipItem.width/2 + tooltipStyles.fontSize * 2 : 0"
            }
          ],
          "y": {
            "signal": "tooltipItem ? tooltipItem.mark.group.y + tooltipItem.y + tooltipItem.height/2 - (tooltipStyles.fontSize * tooltipStyles.lineHeight * 3) : 0"
          }
        }
      },
      "marks": [
        {
          "type": "text",
          "name": "tooltipText",
          "role": "tooltip",
          "zindex": 2,
          "interactive": false,
          "encode": {
            "enter": {
              "fill": {
                "signal": "tooltipStyles.textFill"
              },
              "fontSize": {
                "signal": "tooltipStyles.fontSize"
              },
              "fontFamily": {
                "signal": "tooltipStyles.fontFamily"
              },
              "baseline": {
                "signal": "tooltipStyles.baseline"
              },
              "lineBreak": {
                "value": "/"
              }
            },
            "update": {
              "text": [
                {
                  "test": "tooltipItem && navigateBy === 'team'",
                  "signal": "'team: ' + tooltipItem.datum.team + '/trophies: ' + tooltipItem.datum.trophies_total + '/contests: ' + tooltipItem.datum.contests_total"
                },
                {
                  "test": "tooltipItem && navigateBy === 'contest'",
                  "signal": "'contest: ' + tooltipItem.datum.contest + '/team: ' + tooltipItem.datum.team + '/trophies: ' + tooltipItem.datum.trophies"
                },
                {
                  "value": ""
                }
              ]
            }
          }
        },
        {
          "name": "tooltipRect",
          "type": "rect",
          "aria": false,
          "interactive": false,
          "from": {
            "data": "tooltipText"
          },
          "encode": {
            "enter": {
              "fill": {
                "value": "transparent"
              },
              "stroke": {
                "value": "transparent"
              },
              "strokeWidth": {
                "value": 0
              },
              "cornerRadius": {
                "signal": "tooltipStyles.cornerRadius"
              }
            },
            "update": {
              "fill": {
                "signal": "isValid(tooltipItem) ? tooltipStyles.fill : 'transparent'"
              },
              "stroke": {
                "signal": "isValid(tooltipItem) ? tooltipStyles.strokeColor : 'transparent'"
              },
              "strokeWidth": {
                "signal": "isValid(tooltipItem) ? tooltipStyles.strokeWidth : 0"
              },
              "cornerRadius": {
                "signal": "tooltipStyles.cornerRadius"
              },
              "x": {
                "field": "bounds.x1",
                "round": true,
                "offset": {
                  "signal": "-tooltipStyles.fontSize"
                }
              },
              "x2": {
                "field": "bounds.x2",
                "round": true,
                "offset": {
                  "signal": "tooltipStyles.fontSize"
                }
              },
              "y": {
                "field": "bounds.y1",
                "round": true,
                "offset": {
                  "signal": "-tooltipStyles.fontSize"
                }
              },
              "y2": {
                "field": "bounds.y2",
                "round": true,
                "offset": {
                  "signal": "tooltipStyles.fontSize"
                }
              }
            }
          }
        }
      ]
    }
  ]
}
