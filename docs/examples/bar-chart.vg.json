{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A basic bar chart example, with value labels shown upon pointer hover.",
  "width": 400,
  "height": 200,
  "padding": 5,
  "config": {
    "events": {
      "defaults": {
        "allow": ["keydown"]
      }
    }
  },

  "data": [
    {
      "name": "table",
      "values": [
        {"category": "A", "amount": 28},
        {"category": "B", "amount": 55},
        {"category": "C", "amount": 43},
        {"category": "D", "amount": 91},
        {"category": "E", "amount": 81},
        {"category": "F", "amount": 53},
        {"category": "G", "amount": 19},
        {"category": "H", "amount": 87}
      ]
    }
  ],

  "signals": [
    {
      "name": "tooltip",
      "value": {},
      "on": [
        {"events": "@bars:pointerover", "update": "datum"},
        {"events": "@bars:pointerout",  "update": "{}"}
      ]
    },
    {
      "name": "focused",
      "value": {},
      "on": [
        {
          "events": "@bars:focusin",
          "update": "tooltip !== datum && isNaN(tooltip.amount) ? {} : datum"
        },
        {
          "events": "@bars:focusout",
          "update": "tooltip !== datum ? {} : {category: tooltip.category}"
        }
      ]
    },
    {
      "name": "lastFocused",
      "value": null,
      "on": [
        {
          "events": "@bars:focusin",
          "update": "datum"
        }
      ]
    },
    {
      "name": "focusPrevious",
      "on": [
        {
         "events": "@bars:keydown![event.key === 'ArrowUp' || event.key === 'ArrowLeft']",
         "update": "focus( indexof(group('bars').mark.items, item()) > 0 ? group('bars').mark.items[indexof(group('bars').mark.items, item()) - 1] : peek(group('bars').mark.items) )"
        }
      ]
    },
    {
      "name": "focusNext",
      "on": [
        {
         "events": "@bars:keydown![event.key === 'ArrowDown' || event.key === 'ArrowRight']",
         "update": "focus( indexof(group('bars').mark.items, item()) < length(group('bars').mark.items) - 1 ? group('bars').mark.items[indexof(group('bars').mark.items, item()) + 1] : group('bars').mark.items[0] )"
        }
      ]
    }
  ],

  "scales": [
    {
      "name": "xscale",
      "type": "band",
      "domain": {"data": "table", "field": "category"},
      "range": "width",
      "padding": 0.05,
      "round": true
    },
    {
      "name": "yscale",
      "domain": {"data": "table", "field": "amount"},
      "nice": true,
      "range": "height"
    }
  ],

  "axes": [
    { "orient": "bottom", "scale": "xscale" },
    { "orient": "left", "scale": "yscale" }
  ],

  "marks": [
    {
      "type": "rect",
      "name": "bars",
      "from": {"data":"table"},
      "encode": {
        "enter": {
          "x": {"scale": "xscale", "field": "category"},
          "width": {"scale": "xscale", "band": 1},
          "y": {"scale": "yscale", "field": "amount"},
          "y2": {"scale": "yscale", "value": 0},
          "ariaRole": {"value": "graphics-symbol"},
          "ariaRoleDescription": {"value": "bar"},
          "description": {"signal": "datum.category + ': ' + datum.amount"},
        },
        "update": {
          "fill": [
            {"test": "(focused === datum && !tooltip.category) || tooltip === datum", "value": "red"},
            {"value": "steelblue"}
          ],
          "tabindex": [
            {"test": "lastFocused === null || lastFocused === datum", "value": 0},
            {"value": -1}
          ]
        }
      }
    },
    {
      "type": "text",
      "encode": {
        "enter": {
          "align": {"value": "center"},
          "baseline": {"value": "bottom"},
          "fill": {"value": "#333"}
        },
        "update": {
          "x": {"scale": "xscale", "signal": "tooltip.category || focused.category", "band": 0.5},
          "y": {"scale": "yscale", "signal": "tooltip.amount || focused.amount", "offset": -2},
          "text": {"signal": "tooltip.amount || focused.amount"},
          "fillOpacity": [
            {"test": "isNaN(tooltip.amount) || isNaN(focused.amount)", "value": 0},
            {"value": 1}
          ]
        }
      }
    }
  ]
}
